package Task2.service;

import Task2.models.GameMachine;
import Task2.models.Toys;
import Task2.models.WinToys;

import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Formatter;
import java.util.List;

public class FileInOut {

    public static void writerWiner(WinToys toys) {
        Formatter f = new Formatter();
        for (Toys toy : toys.getToys()) {
            f.format("%d;%s;%d;%.2f\n", toy.getId(), toy.getName(), toy.getCount(), toy.getFrequencyOfLoss());
        }
        try {
            FileWriter fw = new FileWriter("WinToys.csv", false);
            fw.write(String.valueOf(f));
            fw.flush();
            fw.close();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

    }

    public static void writerGame(GameMachine toys) {
        Formatter f = new Formatter();
        for (Toys toy : toys.getToys()) {
            f.format("%d;%s;%d;%.2f\n", toy.getId(), toy.getName(), toy.getCount(), toy.getFrequencyOfLoss());
        }
        try {
            FileWriter fw = new FileWriter("GameToys.csv", false);
            fw.write(String.valueOf(f));
            fw.flush();
            fw.close();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }

    }

    public static void readerFileWiner(WinToys toys) throws IOException {
        List<String> result = Files.readAllLines(Path.of("WinToys.csv"));
        for (String line : result) {
            System.out.println(line);
        }
    }

    public static void readerFileGame(GameMachine gameMachine) {
        List<String> result = null;
        try {
            result = Files.readAllLines(Path.of("GameToys.csv"));
        } catch (IOException e) {
            System.out.println(e);
        }
        ArrayList<Toys> machine = gameMachine.getToys();
        Toys toy = null;
        ArrayList<List> temp = new ArrayList<>();
        //            line.
        //            Stream<String> tempAr = Arrays.stream(words);
        //            System.out.println(tempAr);
        //            System.out.println(tempAr);
        //            Toys tempToy = new Toys((int) tempAr. (1), (String) tempAr.get(1), (int) tempAr.get(2), (float) tempAr.get(3));
        //            gameMachine.getToys().add(tempAr);
        for (String line : result) {
            temp.add(List.of(line.split(";")));
            for (List el : temp) {
                int id = Integer.parseInt((String) el.get(0));
                String name = el.get(1).toString();
                int count = Integer.parseInt((String) el.get(2));
                String frequency = ((String) el.get(3)).replace(",", ".");
                float frequencyOfLoss = Float.parseFloat(frequency);
                toy = new Toys(id, name, count, frequencyOfLoss);
//                System.out.println(line);
//                System.out.println(temp);
            }
            machine.add(toy);
        }
        System.out.println(machine.toString());
//        List toys = gameMachine.setToys(temp);
//        System.out.println(gameMachine);
    }
}
